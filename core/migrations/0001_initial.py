# Generated by Django 4.2.9 on 2025-08-05 02:41

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='StorageConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('storage_type', models.CharField(choices=[('existing_pool', 'Use Existing ZFS Pool'), ('dedicated_disk', 'Dedicate Disk for ZFS Pool'), ('image_file', 'Create ZFS Pool from Image File'), ('directory', 'Directory-based Storage (Development)'), ('multi_disk', 'Multi-disk ZFS Pool'), ('hybrid', 'Hybrid Storage (SSD Cache + HDD Data)')], max_length=20)),
                ('pool_type', models.CharField(choices=[('single', 'Single Disk'), ('mirror', 'Mirror (RAID 1)'), ('raidz1', 'RAID-Z1 (Single Parity)'), ('raidz2', 'RAID-Z2 (Double Parity)'), ('raidz3', 'RAID-Z3 (Triple Parity)')], default='single', max_length=10)),
                ('existing_pool_name', models.CharField(blank=True, max_length=100)),
                ('dedicated_disks', models.JSONField(blank=True, default=list)),
                ('image_file_path', models.CharField(blank=True, max_length=500)),
                ('image_file_size_gb', models.IntegerField(blank=True, null=True)),
                ('sparse_file', models.BooleanField(default=True)),
                ('storage_directory', models.CharField(blank=True, max_length=500)),
                ('cache_disks', models.JSONField(blank=True, default=list)),
                ('data_disks', models.JSONField(blank=True, default=list)),
                ('pool_name', models.CharField(blank=True, max_length=100)),
                ('compression', models.CharField(default='lz4', max_length=20)),
                ('dedup', models.BooleanField(default=False)),
                ('is_configured', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('configuration_error', models.TextField(blank=True)),
                ('health_status', models.CharField(choices=[('healthy', 'Healthy'), ('degraded', 'Degraded'), ('failed', 'Failed'), ('missing', 'Missing'), ('unknown', 'Unknown')], default='unknown', max_length=20)),
                ('health_details', models.JSONField(blank=True, default=dict)),
                ('last_health_check', models.DateTimeField(blank=True, null=True)),
                ('last_reconciliation', models.DateTimeField(blank=True, null=True)),
                ('actual_pool_info', models.JSONField(blank=True, default=dict)),
                ('sync_status', models.CharField(choices=[('synced', 'Synced'), ('drift_detected', 'Drift Detected'), ('out_of_sync', 'Out of Sync'), ('unknown', 'Unknown')], default='unknown', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='HostVM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('ip_address', models.GenericIPAddressField()),
                ('username', models.CharField(max_length=50)),
                ('ssh_key', models.TextField(blank=True)),
                ('password', models.CharField(blank=True, max_length=255)),
                ('zfs_pool', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_docker_host', models.BooleanField(default=False)),
                ('last_validated', models.DateTimeField(blank=True, null=True)),
                ('validation_status', models.CharField(choices=[('pending', 'Pending'), ('valid', 'Valid'), ('warning', 'Warning'), ('invalid', 'Invalid'), ('error', 'Error')], default='pending', max_length=20)),
                ('validation_report', models.JSONField(blank=True, default=dict)),
                ('os_info', models.JSONField(blank=True, default=dict)),
                ('docker_version', models.CharField(blank=True, max_length=50)),
                ('docker_compose_version', models.CharField(blank=True, max_length=50)),
                ('zfs_version', models.CharField(blank=True, max_length=50)),
                ('zfs_pools', models.JSONField(blank=True, default=list)),
                ('system_resources', models.JSONField(blank=True, default=dict)),
                ('storage_config', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.storageconfiguration')),
            ],
        ),
        migrations.CreateModel(
            name='Database',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('db_type', models.CharField(default='postgresql', max_length=50)),
                ('db_version', models.CharField(default='15', max_length=20)),
                ('container_name', models.CharField(max_length=100, unique=True)),
                ('zfs_dataset', models.CharField(max_length=200)),
                ('port', models.IntegerField()),
                ('username', models.CharField(default='postgres', max_length=50)),
                ('password', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('host_vm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.hostvm')),
            ],
        ),
        migrations.CreateModel(
            name='StorageQuota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dataset_name', models.CharField(max_length=200)),
                ('quota_gb', models.IntegerField()),
                ('used_gb', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('storage_config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.storageconfiguration')),
            ],
            options={
                'unique_together': {('storage_config', 'dataset_name')},
            },
        ),
        migrations.CreateModel(
            name='DatabaseBranch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('snapshot_name', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('database', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.database')),
            ],
            options={
                'unique_together': {('database', 'name')},
            },
        ),
    ]
